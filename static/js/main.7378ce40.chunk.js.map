{"version":3,"sources":["data/DocumentData.ts","component/folder-tree/LabelComponent.tsx","component/DocumentLabel.tsx","component/FolderLabel.tsx","component/HeaderLabel.tsx","component/document-menu/DocumentMenu.tsx","component/folder-tree/Indent.tsx","component/folder-menu/FolderMenu.tsx","data/UserData.ts","data/FolderData.ts","component/folder-tree/FolderComponent.tsx","network/MockService.ts","main.tsx","index.tsx"],"names":["DocumentData","name","parent","isApproved","setApproved","getApproved","this","addChild","LabelComponent","withStyles","theme","createStyles","button","width","overflowX","justifyContent","text","paddingLeft","textOverflow","whiteSpace","textAlign","textTransform","props","Button","onClick","className","classes","icon","Typography","label","DocumentLabel","FileCopy","style","color","data","FolderLabel","iconColor","isOpen","FolderOpen","Folder","HeaderLabel","headerContainer","display","flexDirection","parentLabel","flexGrow","labelSeperator","lineHeight","onSelect","renderSelfLabel","DocumentMenu","setDocumentApproved","onUpdate","React","Component","Indent","depth","children","UserType","FolderMenu","getDepth","onDeleteFolder","Delete","MenuOutlined","renderFolderActions","onCreateFolder","onCreateDocument","Add","renderCreateButton","map","child","Array","from","getUsers","user","renderUsers","FolderData","users","delete","removeChild","toggleOpen","undefined","filter","c","push","getPath","concat","every","Set","forEach","add","addUser","FolderComponent","onFolderClick","forceUpdate","idx","key","UserData","userType","getUserFolder","username","folder","project1","parseRaw","raw","Object","keys","val","isArray","RawProject","Owner","Contractor","MainComponent","componentDidMount","setState","prevState","root","selectDocument","selected","addFolderToFolder","addDocumentToFolder","deleteFolder","onDocumentUpdate","render","body","state","container","foldertree","Main","height","borderRight","borderColor","palette","divider","overflowY","createMuiTheme","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7378ce40.chunk.js","sourcesContent":["import { FolderData } from \"./FolderData\";\r\n\r\nexport class DocumentData {\r\n\r\n    public name: string;\r\n    public parent: FolderData;\r\n\r\n    private isApproved: boolean;\r\n\r\n    constructor(name: string, parent: FolderData) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.isApproved = false;\r\n        \r\n        this.parent.addChild(this);\r\n    }\r\n\r\n    public setApproved = (isApproved: boolean): void => {\r\n        this.isApproved = isApproved;\r\n    }\r\n\r\n    public getApproved = (): boolean => {\r\n        return this.isApproved;\r\n    }\r\n\r\n}\r\n","import { Button, createStyles, Theme, Typography, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    button: {\r\n        width: '100%',\r\n        overflowX: 'hidden',\r\n        justifyContent: 'left',\r\n    },\r\n    \r\n    text: {\r\n        paddingLeft: '4px',\r\n        overflowX: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        textAlign: 'left',\r\n        textTransform: 'none',\r\n    },\r\n\r\n});\r\n\r\ntype Props = WithStyles & {\r\n    icon: React.ReactElement,\r\n    label: string;\r\n    onClick?(): void;\r\n}\r\n\r\nfunction renderLabel(props: Props) {\r\n    return (\r\n        <Button\r\n            onClick={ props.onClick }\r\n            className={ props.classes.button }\r\n        >\r\n            { props.icon }\r\n            <Typography className={ props.classes.text }>\r\n                { props.label }\r\n            </Typography>\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport const LabelComponent = withStyles(styles)(renderLabel);\r\n","import { FileCopy } from \"@material-ui/icons\";\r\nimport { Color } from \"csstype\";\r\nimport React from \"react\";\r\nimport { DocumentData } from \"../data/DocumentData\";\r\nimport { LabelComponent } from \"./folder-tree/LabelComponent\";\r\n\r\ntype Props = {\r\n    data: DocumentData;\r\n    onClick?(): void;\r\n}\r\n\r\nfunction renderLabel(props: Props) {\r\n    return (\r\n        <LabelComponent\r\n            icon={ <FileCopy style={ { color: getApprovedColor(props.data.getApproved()) } }/> }\r\n            label={ props.data.name }\r\n            onClick={ props.onClick }\r\n        />\r\n    );\r\n}\r\n\r\nfunction getApprovedColor(isApproved: boolean): Color {\r\n    return isApproved ? 'green' : 'black';\r\n}\r\n\r\nexport const DocumentLabel = renderLabel;\r\n\r\n","import { Folder, FolderOpen } from \"@material-ui/icons\";\r\nimport { Color } from \"csstype\";\r\nimport React from \"react\";\r\nimport { FolderData } from \"../data/FolderData\";\r\nimport { LabelComponent } from \"./folder-tree/LabelComponent\";\r\n\r\ntype Props = {\r\n    data: FolderData | null;\r\n    onClick?(): void;\r\n}\r\n\r\nfunction renderLabel(props: Props) {\r\n    if (props.data === null) return null;\r\n\r\n    const iconColor: Color = getApprovedColor(props.data.getApproved());\r\n    const isOpen: boolean = props.data.isOpen;\r\n\r\n    return (\r\n        <LabelComponent\r\n            icon={ isOpen ? <FolderOpen style={ { color: iconColor } }/> : <Folder style={ { color: iconColor } }/> }\r\n            label={ props.data.name }\r\n            onClick={ props.onClick }\r\n        />\r\n    );\r\n}\r\n\r\nfunction getApprovedColor(isApproved: boolean): Color {\r\n    return isApproved ? 'green' : 'black';\r\n}\r\n\r\nexport const FolderLabel = renderLabel;\r\n\r\n","import { createStyles, Theme, Typography, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { DocumentData } from \"../data/DocumentData\";\r\nimport { FolderData } from \"../data/FolderData\";\r\nimport { DocumentLabel } from \"./DocumentLabel\";\r\nimport { FolderLabel } from \"./FolderLabel\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    headerContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n\r\n    parentLabel: {\r\n        flexGrow: 0,\r\n    },\r\n\r\n    labelSeperator: {\r\n        lineHeight: '36px',\r\n    },\r\n    \r\n});\r\n\r\ntype Props = WithStyles & {\r\n    data: FolderData | DocumentData;\r\n    onSelect(document: FolderData | DocumentData | null): void;\r\n}\r\n\r\nfunction renderLabel(props: Props) {\r\n    return (\r\n        <div className={ props.classes.headerContainer }>\r\n            { props.data.parent === null ? null : (\r\n                <>\r\n                    <div className={ props.classes.parentLabel }>\r\n                        <FolderLabel\r\n                            data={ props.data.parent }\r\n                            onClick={ () => props.onSelect(props.data.parent) }\r\n                        />\r\n                    </div>\r\n                    <Typography className={ props.classes.labelSeperator }>>></Typography>\r\n                </>\r\n            ) }\r\n\r\n            { renderSelfLabel(props) }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction renderSelfLabel(props: Props) {\r\n    if (props.data instanceof DocumentData) {\r\n        return (\r\n            <DocumentLabel\r\n                data={ props.data }\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <FolderLabel\r\n                data={ props.data }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport const HeaderLabel = withStyles(styles)(renderLabel);\r\n\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { DocumentData } from \"../../data/DocumentData\";\r\nimport { FolderData } from \"../../data/FolderData\";\r\nimport { HeaderLabel } from \"../HeaderLabel\";\r\n\r\ntype Props = {\r\n    data: DocumentData;\r\n    onUpdate(): void;\r\n    onSelect(document: FolderData | DocumentData | null): void;\r\n};\r\n\r\nclass DocumentMenuRenderer extends React.Component<Props> {\r\n\r\n    public render(): React.ReactElement {\r\n        return (\r\n            <div>\r\n                <HeaderLabel\r\n                    data={ this.props.data }\r\n                    onSelect={ this.props.onSelect }\r\n                />\r\n\r\n                <Button onClick={ this.setDocumentApproved }>Approve</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private setDocumentApproved = (): void => {\r\n        this.props.data.setApproved(true);\r\n        this.props.onUpdate();\r\n    }\r\n\r\n}\r\n\r\nexport const DocumentMenu = DocumentMenuRenderer;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n    depth: number;\r\n    children: React.ReactElement;\r\n}\r\n\r\nfunction renderIndent(props: Props) {\r\n    return (\r\n        <div\r\n            style={ { paddingLeft: `${ 24 * props.depth }px`} }\r\n        >\r\n            { props.children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Indent = renderIndent;\r\n","import { Button, createStyles, Theme, Typography, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport { Add, Delete, MenuOutlined } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { DocumentData } from \"../../data/DocumentData\";\r\nimport { FolderData } from \"../../data/FolderData\";\r\nimport { DocumentLabel } from \"../DocumentLabel\";\r\nimport { Indent } from \"../folder-tree/Indent\";\r\nimport { FolderLabel } from \"../FolderLabel\";\r\nimport { HeaderLabel } from \"../HeaderLabel\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    headerContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n\r\n    parentLabel: {\r\n        flexGrow: 0,\r\n    },\r\n\r\n    labelSeperator: {\r\n        lineHeight: '36px',\r\n    },\r\n    \r\n});\r\n\r\ntype Props = WithStyles & {\r\n    data: FolderData;\r\n    onSelect(document: FolderData | DocumentData | null): void;\r\n    onCreateFolder(parent: FolderData, name: string): void;\r\n    onCreateDocument(parent: FolderData, name: string): void;\r\n    onDeleteFolder(folder: FolderData): void;\r\n};\r\n\r\nfunction renderFolderMenu(props: Props): React.ReactElement {\r\n    return (\r\n        <div>\r\n            <HeaderLabel\r\n                data={ props.data }\r\n                onSelect={ props.onSelect }\r\n            />\r\n\r\n            { renderFolderActions(props) }\r\n\r\n            <Typography>Documents</Typography>\r\n\r\n            <Indent depth={ 1 }>\r\n                { renderCreateButton(props) }\r\n            </Indent>\r\n\r\n            { props.data.children.map(child => {\r\n                if (child instanceof DocumentData) {\r\n                    return (\r\n                        <Indent depth={ 1 }>\r\n                            <DocumentLabel\r\n                                data={ child }\r\n                                onClick={ () => props.onSelect(child) }\r\n                            />\r\n                        </Indent>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Indent depth={ 1 }>\r\n                            <FolderLabel\r\n                                data={ child }\r\n                                onClick={ () => props.onSelect(child) }\r\n                            />\r\n                        </Indent>\r\n                    );\r\n                }\r\n            }) }\r\n\r\n            { renderUsers(props) }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction renderFolderActions(props: Props) {\r\n    if (props.data.getDepth() === 0) return null;\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                onClick={ () => props.onDeleteFolder(props.data) }\r\n            >\r\n                <Delete/>\r\n                Delete This Folder\r\n            </Button>\r\n\r\n            <Button>\r\n                <MenuOutlined/>\r\n                Rename This Folder\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction renderUsers(props: Props) {\r\n    if (props.data.getDepth() !== 1) return null;\r\n\r\n    return (\r\n        <>\r\n            <Typography>Users</Typography>\r\n            \r\n            <Indent depth={ 1 }>\r\n                <Button>\r\n                    <Add/>\r\n                    Add User\r\n                </Button>\r\n            </Indent>\r\n\r\n            { Array.from(props.data.getUsers()).map(user => (\r\n                <Indent depth={ 1 }>\r\n                    <Typography>{ user.name }</Typography>\r\n                </Indent>\r\n            )) }\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nfunction renderCreateButton(props: Props) {\r\n    let label: string = 'New Document';\r\n    let onClick: undefined | (() => void) = () => props.onCreateFolder(props.data, 'New Folder');\r\n\r\n    switch (props.data.getDepth()) {\r\n        case 0:\r\n            label = 'New Project';\r\n            break;\r\n\r\n        case 1:\r\n            label = 'New Submission';\r\n            break;\r\n            \r\n        case 2:\r\n            label = 'New Submission Document';\r\n            break;\r\n            \r\n        case 3:\r\n            onClick = () => props.onCreateDocument(props.data, 'New Document');\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            onClick={ onClick }\r\n        >\r\n            <Add/>\r\n            { label }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport const FolderMenu = withStyles(styles)(renderFolderMenu);\r\n","export enum UserType {\r\n    Owner,\r\n    Contractor,\r\n}\r\n\r\nexport class UserData {\r\n\r\n    public name: string;\r\n    public userType: UserType;\r\n\r\n    constructor(name: string, userType: UserType) {\r\n        this.name = name;\r\n        this.userType = userType;\r\n    }\r\n\r\n}","import { DocumentData } from \"./DocumentData\";\r\nimport { UserData } from \"./UserData\";\r\n\r\nexport class FolderData {\r\n\r\n    public name: string;\r\n    public parent: FolderData | null;\r\n    public children: (FolderData | DocumentData)[];\r\n    public isOpen: boolean;\r\n\r\n    private users: UserData[];\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.parent = null;\r\n        this.children = [];\r\n        this.isOpen = true;\r\n\r\n        this.users = [];\r\n    }\r\n\r\n    public delete = (): void => {\r\n        if (this.parent !== null) {\r\n            this.parent.removeChild(this);\r\n        }\r\n    }\r\n\r\n    public toggleOpen = (isOpen?: boolean): void => {\r\n        this.isOpen = isOpen === undefined ? !this.isOpen : isOpen;\r\n    }\r\n\r\n    public removeChild = (child: FolderData | DocumentData): void => {\r\n        child.parent = null;\r\n        this.children = this.children.filter(c => c !== child);\r\n    }\r\n\r\n    public addChild = (child: FolderData | DocumentData): void => {\r\n        child.parent = this;\r\n        this.children.push(child);\r\n    }\r\n\r\n    public getPath = (): FolderData[] => {\r\n        if (this.parent === null) return [this];\r\n        return this.parent.getPath().concat([this]);\r\n    }\r\n\r\n    public getDepth = (): number => {\r\n        if (this.parent === null) return 0;\r\n        return this.parent.getDepth() + 1;\r\n    }\r\n\r\n    public getApproved = (): boolean => {\r\n        return this.children.every(child => child.getApproved());\r\n    }\r\n\r\n    public getUsers = (): Set<UserData> => {\r\n        if (this.parent === null) return new Set(this.users);\r\n\r\n        const users: Set<UserData> = this.parent.getUsers();\r\n        this.users.forEach(user => users.add(user));\r\n        return users;\r\n    }\r\n\r\n    public addUser = (user: UserData): void => {\r\n        this.users.push(user);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { DocumentData } from \"../../data/DocumentData\";\r\nimport { FolderData } from \"../../data/FolderData\";\r\nimport { DocumentLabel } from \"../DocumentLabel\";\r\nimport { FolderLabel } from \"../FolderLabel\";\r\nimport { Indent } from \"./Indent\";\r\n\r\ntype Props = {\r\n    data: FolderData;\r\n    onSelect(selected: FolderData | DocumentData): void;\r\n}\r\n\r\nclass FolderRenderer extends React.Component<Props> {\r\n\r\n    public render() {\r\n\r\n        const depth: number = this.props.data.getDepth();\r\n        const isOpen: boolean = this.props.data.isOpen;\r\n\r\n        return (\r\n            <>\r\n                <Indent depth={ depth }>\r\n                    <FolderLabel\r\n                        data={ this.props.data }\r\n                        onClick={ this.onFolderClick }\r\n                    />\r\n                </Indent>\r\n\r\n                { !isOpen ? null : this.props.data.children.map((child, idx) => {\r\n                    if (child instanceof FolderData) {\r\n                        return (\r\n                            <FolderComponent\r\n                                key={ idx }\r\n                                data={ child }\r\n                                onSelect={ this.props.onSelect }\r\n                            />\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <Indent key={ idx } depth={ depth + 1 }>\r\n                                <DocumentLabel\r\n                                    data={ child }\r\n                                    onClick={ () => this.props.onSelect(child) }\r\n                                />\r\n                            </Indent>\r\n                        );\r\n                    }\r\n                }) }\r\n            </>\r\n        );\r\n    }\r\n\r\n    private onFolderClick = (): void => {\r\n        this.props.data.toggleOpen();\r\n        this.forceUpdate();\r\n        this.props.onSelect(this.props.data);\r\n    }\r\n\r\n}\r\n\r\nexport const FolderComponent = FolderRenderer;\r\n","import { DocumentData } from '../data/DocumentData';\r\nimport { FolderData } from '../data/FolderData';\r\nimport RawProject from './RawProject.json';\r\nimport { UserData, UserType } from '../data/UserData';\r\n\r\nexport function getUserFolder(username: string): FolderData {\r\n    const folder: FolderData = new FolderData(username);\r\n    const project1: FolderData = parseRaw('Project 1', RawProject);\r\n\r\n    getUsers().forEach(user => project1.addUser(user));\r\n    folder.addChild(project1);\r\n    return folder;\r\n}\r\n\r\nfunction parseRaw(name: string, raw: { [key: string]: any }): FolderData {\r\n    const parent: FolderData = new FolderData(name);\r\n    parent.toggleOpen(false);\r\n\r\n    Object.keys(raw).forEach(key => {\r\n        const val = raw[key];\r\n\r\n        if (Array.isArray(val)) return new DocumentData(key, parent);\r\n        parent.addChild(parseRaw(key, val));\r\n        parent.toggleOpen(true);\r\n    });\r\n\r\n    return parent;\r\n}\r\n\r\nexport function getUsers(): UserData[] {\r\n    return [\r\n        new UserData('BI_1', UserType.Owner),\r\n        new UserData('Contractor_1', UserType.Contractor),\r\n    ];\r\n}","import { createStyles, Theme, withStyles } from \"@material-ui/core\";\nimport { WithStyles } from \"@material-ui/styles\";\nimport React, { ReactElement } from \"react\";\nimport { DocumentMenu } from \"./component/document-menu/DocumentMenu\";\nimport { FolderMenu } from \"./component/folder-menu/FolderMenu\";\nimport { FolderComponent } from \"./component/folder-tree/FolderComponent\";\nimport { DocumentData } from \"./data/DocumentData\";\nimport { FolderData } from \"./data/FolderData\";\nimport { UserData } from \"./data/UserData\";\nimport { getUserFolder, getUsers } from \"./network/MockService\";\n\nconst styles = (theme: Theme) => createStyles({\n\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100vh',\n  },\n\n  foldertree: {\n    width: '300px',\n    height: '100%',\n    flexGrow: 0,\n    borderRight: \"solid\",\n    borderColor: theme.palette.divider,\n    overflowY: \"scroll\",\n  },\n\n  body: {\n      flexGrow: 1,\n  },\n\n});\n\ntype Props = WithStyles<typeof styles> & {\n\n};\n\ntype State = {\n  user: UserData,\n  root: FolderData,\n  selected: FolderData | DocumentData | null,\n};\n\nclass MainComponent extends React.Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n\n    const user: UserData = getUsers()[0];\n\n    this.state = {\n      user: user,\n      root: new FolderData(''),\n      selected: null,\n    };\n  }\n\n  public componentDidMount = () => {\n    this.setState(prevState => ({ root: getUserFolder(prevState.user.name) }));\n  }\n\n  private selectDocument = (selected: FolderData | DocumentData) => {\n    this.setState({ selected }, this.forceUpdate);\n  }\n\n  private addFolderToFolder = (parent: FolderData, name: string): void => {\n    parent.addChild(new FolderData(name));\n    this.forceUpdate();\n  }\n\n  private addDocumentToFolder = (parent: FolderData, name: string): void => {\n    new DocumentData(name, parent);\n    this.forceUpdate();\n  }\n\n  private deleteFolder = (folder: FolderData): void => {\n    folder.delete();\n    this.setState(prevState => {\n      return prevState.selected === folder ? { selected: null } : null;\n    }, this.forceUpdate);\n  }\n\n  private onDocumentUpdate = () => {\n    this.forceUpdate();\n  }\n\n  public render = (): ReactElement => {\n    let body = null;\n\n    if (this.state.selected instanceof FolderData) {\n      body = (\n        <FolderMenu\n          data={ this.state.selected }\n          onSelect={ this.selectDocument }\n          onCreateFolder={ this.addFolderToFolder }\n          onCreateDocument={ this.addDocumentToFolder }\n          onDeleteFolder={ this.deleteFolder }\n        />\n      );\n    } else if (this.state.selected instanceof DocumentData) {\n      body = (\n        <DocumentMenu\n          data={ this.state.selected }\n          onUpdate={ this.onDocumentUpdate }\n          onSelect={ this.selectDocument }\n        />\n      )\n    }\n\n    return (\n      <div className={ this.props.classes.container }>\n        <div className={ this.props.classes.foldertree }>\n            <FolderComponent\n              data={ this.state.root }\n              onSelect={ this.selectDocument }\n            />\n        </div>\n\n        <div className={ this.props.classes.body }>\n          { body }\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport const Main = withStyles(styles)(MainComponent);\n","import { createMuiTheme } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Main } from './main';\n\ncreateMuiTheme();\nReactDOM.render(<BrowserRouter><Main /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}