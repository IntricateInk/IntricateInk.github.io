{"version":3,"sources":["data/FolderData.ts","component/folder-tree/LabelComponent.tsx","component/folder-tree/FolderComponent.tsx","data/UserData.ts","data/DocumentData.ts","network/MockService.ts","main.tsx","index.tsx"],"names":["FolderData","name","parent","children","isOpen","callbacks","deregister","callback","register","push","raise","forEach","toggleOpen","setChildren","child","getDepth","this","LabelComponent","withStyles","theme","createStyles","button","width","overflowX","justifyContent","text","paddingLeft","textOverflow","whiteSpace","textAlign","textTransform","props","style","depth","Button","onClick","className","classes","icon","Typography","label","UserType","FolderComponent","data","FolderOpen","Folder","map","idx","key","FileCopy","UserData","userType","DocumentData","getUserFolder","username","folder","parseRaw","RawProject","raw","Object","keys","val","Array","isArray","MainComponent","componentDidMount","setState","prevState","root","user","componentDidUpdate","prevProps","handleFolderChange","state","forceUpdate","render","container","foldertree","body","Owner","selected","React","Component","Main","display","flexDirection","height","flexGrow","borderRight","borderColor","palette","divider","overflowY","createMuiTheme","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a1f849c7.chunk.js","sourcesContent":["import { DocumentData } from \"./DocumentData\";\r\n\r\ntype Callback = () => any;\r\n\r\nexport class FolderData {\r\n\r\n    public name: string;\r\n    public parent: FolderData | null;\r\n    public children: (FolderData | DocumentData)[];\r\n    public isOpen: boolean;\r\n\r\n    private callbacks: Callback[];\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n        this.parent = null;\r\n        this.children = [];\r\n\r\n        this.isOpen = true;\r\n\r\n        this.callbacks = [];\r\n    }\r\n\r\n    public deregister = (callback: Callback): void => {\r\n    }\r\n\r\n    public register = (callback: Callback): void => {\r\n        this.callbacks.push(callback);\r\n    }\r\n\r\n    public raise = (): void => {\r\n        this.callbacks.forEach(callback => callback());\r\n        if (this.parent !== null) this.parent.raise();\r\n    }\r\n\r\n    public toggleOpen = (): void => {\r\n        this.isOpen = !this.isOpen;\r\n        this.raise();\r\n    }\r\n\r\n    public setChildren = (children: (FolderData | DocumentData)[]): void => {\r\n        this.children.forEach(child => {\r\n            if (child instanceof FolderData) child.parent = null;\r\n        });\r\n\r\n        this.children = children;\r\n\r\n        this.children.forEach(child => {\r\n            if (child instanceof FolderData) child.parent = this;\r\n        });\r\n    }\r\n\r\n    public getDepth = (): number => {\r\n        if (this.parent === null) return 0;\r\n        return this.parent.getDepth() + 1;\r\n    }\r\n\r\n}\r\n","import { Button, createStyles, Theme, Typography, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    button: {\r\n        width: '100%',\r\n        overflowX: 'hidden',\r\n        justifyContent: 'left',\r\n    },\r\n    \r\n    text: {\r\n        paddingLeft: '4px',\r\n        overflowX: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        textAlign: 'left',\r\n        textTransform: 'none',\r\n    },\r\n\r\n});\r\n\r\ntype Props = WithStyles & {\r\n    icon: React.ReactElement,\r\n    label: string;\r\n    depth: number;\r\n    onClick?(): void;\r\n}\r\n\r\nfunction renderLabel(props: Props) {\r\n    return (\r\n        <div\r\n            style={ { paddingLeft: `${ 24 * props.depth }px`} }\r\n        >\r\n            <Button\r\n                onClick={ props.onClick }\r\n                className={ props.classes.button }\r\n            >\r\n                { props.icon }\r\n                <Typography className={ props.classes.text }>\r\n                    { props.label }\r\n                </Typography>\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelComponent = withStyles(styles)(renderLabel);\r\n","import { FileCopy, Folder, FolderOpen } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { FolderData } from \"../../data/FolderData\";\r\nimport { LabelComponent } from \"./LabelComponent\";\r\n\r\ntype Props = {\r\n    data: FolderData;\r\n}\r\n\r\nfunction renderFolder(props: Props) {\r\n\r\n    const depth: number = props.data.getDepth();\r\n    const isOpen: boolean = props.data.isOpen;\r\n\r\n    return (\r\n        <>\r\n            <LabelComponent\r\n                icon={ isOpen ? <FolderOpen/> : <Folder/> }\r\n                label={ props.data.name }\r\n                depth={ depth }\r\n                onClick={ props.data.toggleOpen }\r\n            />\r\n\r\n            { !isOpen ? null : props.data.children.map((child, idx) => {\r\n                if (child instanceof FolderData) {\r\n                    return (\r\n                        <FolderComponent\r\n                            key={ idx }\r\n                            data={ child }\r\n                        />\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <LabelComponent\r\n                            key={ idx }\r\n                            icon={ <FileCopy/> }\r\n                            label={ child.name }\r\n                            depth={ depth + 1 }\r\n                        />\r\n                    );\r\n                }\r\n            }) }\r\n        </>\r\n    );\r\n}\r\n\r\nexport const FolderComponent = renderFolder;\r\n","export enum UserType {\r\n    Owner,\r\n    Contractor,\r\n}\r\n\r\nexport class UserData {\r\n\r\n    public name: string;\r\n    public userType: UserType;\r\n\r\n    constructor(name: string, userType: UserType) {\r\n        this.name = name;\r\n        this.userType = userType;\r\n    }\r\n\r\n}","\r\nexport class DocumentData {\r\n\r\n    public name: string;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n}\r\n","import { DocumentData } from '../data/DocumentData';\r\nimport { FolderData } from '../data/FolderData';\r\nimport RawProject from './RawProject.json';\r\n\r\nexport function getUserFolder(username: string): FolderData {\r\n    const folder: FolderData = new FolderData(username);\r\n    folder.setChildren([parseRaw('Project 1', RawProject)]);\r\n    return folder;\r\n}\r\n\r\nfunction parseRaw(name: string, raw: { [key: string]: any }): FolderData {\r\n    const data: FolderData = new FolderData(name);\r\n    const children: (FolderData | DocumentData)[] = Object.keys(raw).map(key => {\r\n        const val = raw[key];\r\n\r\n        if (Array.isArray(val)) return new DocumentData(key);\r\n        return parseRaw(key, val);\r\n    });\r\n\r\n    data.setChildren(children);\r\n    return data;\r\n}","import { createStyles, Theme, withStyles } from \"@material-ui/core\";\nimport { WithStyles } from \"@material-ui/styles\";\nimport React, { ReactElement } from \"react\";\nimport { FolderComponent } from \"./component/folder-tree/FolderComponent\";\nimport { DocumentData } from \"./data/DocumentData\";\nimport { FolderData } from \"./data/FolderData\";\nimport { UserData, UserType } from \"./data/UserData\";\nimport { getUserFolder } from \"./network/MockService\";\n\nconst styles = (theme: Theme) => createStyles({\n\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: '100vh',\n  },\n\n  foldertree: {\n    width: '300px',\n    height: '100%',\n    flexGrow: 0,\n    borderRight: \"solid\",\n    borderColor: theme.palette.divider,\n    overflowY: \"scroll\",\n  },\n\n  body: {\n      flexGrow: 1,\n  },\n\n});\n\ntype Props = WithStyles<typeof styles> & {\n\n};\n\ntype State = {\n  user: UserData,\n  root: FolderData,\n  selected: FolderData | DocumentData | null,\n};\n\nclass MainComponent extends React.Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n\n    const user: UserData = new UserData('user_DSTA_1', UserType.Owner);\n\n    this.state = {\n      user: user,\n      root: new FolderData(''),\n      selected: null,\n    };\n  }\n\n  public componentDidMount = () => {\n    this.setState(prevState => ({ root: getUserFolder(prevState.user.name) }));\n  }\n\n  public componentDidUpdate = (prevProps: Props, prevState: State): void => {\n    prevState.root.deregister(this.handleFolderChange);\n    this.state.root.register(this.handleFolderChange);\n  }\n\n  private handleFolderChange = () => {\n    this.forceUpdate();\n  }\n\n  public render = (): ReactElement => {\n    return (\n      <div className={ this.props.classes.container }>\n        <div className={ this.props.classes.foldertree }>\n            <FolderComponent\n              data={ this.state.root }\n            />\n        </div>\n\n        <div className={ this.props.classes.body }>\n          Content here\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport const Main = withStyles(styles)(MainComponent);\n","import { createMuiTheme } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Main } from './main';\n\ncreateMuiTheme();\nReactDOM.render(<BrowserRouter><Main /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}